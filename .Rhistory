filter(scope != 'full') %>%
spread(key = 'scope', value = 'rate', fill = 0) %>%
mutate(change = future-past) %>%
spread(key = 'direction', value = 'change', fill = 0) %>%
mutate(change = if_else(true_strategy == 'right', L-R, R-L)) %>%
mutate(mouse = str_split_fixed(event_nr, "_", 4)[,1],
day = str_split_fixed(event_nr, "_", 4)[,2])
testing
testing <- cd_pert %>%
filter(time > -1 & time < 1) %>%
group_by(true_strategy, strategy_perturbation, strategy, direction, event_nr, scope) %>%
summarise(rate = n()) %>%
filter(scope != 'full') %>%
spread(key = 'scope', value = 'rate', fill = 0) %>%
mutate(change = future-past) %>%
spread(key = 'direction', value = 'change', fill = 0) %>%
mutate(change = if_else(true_strategy == 'right', L-R, R-L)) %>%
mutate(mouse = str_split_fixed(event_nr, "_", 4)[,1],
day = str_split_fixed(event_nr, "_", 4)[,2])
?prentice.test
test <- prentice.test(testing[['change']], testing[['strategy_perturbation']], testing[['blocks']])
test
test <- prentice.test(testing[['change']], testing[['strategy_perturbation']], testing[['blocks']], alternative = 'greater')
test
test_per_mice <- testing %>%
group_by(mouse) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks)$p.value,
chi = prentice.test(change, strategy_perturbation, blocks)$statistic)
test <- prentice.test(testing[['change']], testing[['strategy_perturbation']], testing[['blocks']], alternative = 'less')
test
test_per_mice <- testing %>%
group_by(mouse) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks)$p.value,
chi = prentice.test(change, strategy_perturbation, blocks)$statistic)
testing <- cd_pert %>%
filter(time > -1 & time < 1) %>%
group_by(true_strategy, strategy_perturbation, strategy, direction, event_nr, scope) %>%
summarise(rate = n()) %>%
filter(scope != 'full') %>%
spread(key = 'scope', value = 'rate', fill = 0) %>%
mutate(change = future-past) %>%
spread(key = 'direction', value = 'change', fill = 0) %>%
mutate(change = if_else(true_strategy == 'right', L-R, R-L)) %>%
mutate(mouse = str_split_fixed(event_nr, "_", 4)[,1],
day = str_split_fixed(event_nr, "_", 4)[,2]) %>%
mutate(blocks = paste(mouse, day, true_strategy))
knitr::opts_chunk$set(
fig.align = "center",
out.width = "90%",
echo = FALSE,
message = FALSE,
warning = FALSE,
results = 'hide')
library(reticulate)
library(feather)
library(ggplot2)
library(patchwork)
library(muStat)
library(magrittr)
library(dplyr)
library(stringr)
library(lubridate)
library(tidyr)
library(png)
library(grid)
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown'
), 'packages.bib')
cd_pert <- feather::read_feather('general_hist.feather')
testing <- cd_pert %>%
filter(time > -1 & time < 1) %>%
group_by(true_strategy, strategy_perturbation, strategy, direction, event_nr, scope) %>%
summarise(rate = n()) %>%
filter(scope != 'full') %>%
spread(key = 'scope', value = 'rate', fill = 0) %>%
mutate(change = future-past) %>%
spread(key = 'direction', value = 'change', fill = 0) %>%
mutate(change = if_else(true_strategy == 'right', L-R, R-L)) %>%
mutate(mouse = str_split_fixed(event_nr, "_", 4)[,1],
day = str_split_fixed(event_nr, "_", 4)[,2]) %>%
mutate(blocks = paste(mouse, day, true_strategy))
test
test <- prentice.test(testing[['change']], testing[['strategy_perturbation']], testing[['blocks']], alternative = 'greater')
test
test_per_mice <- testing %>%
group_by(mouse) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$p.value,
chi = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$statistic)
test_per_mice
testing <- cd_pert %>%
filter(time > -1 & time < 1) %>%
filter(mouse != 'gtmk443f', mouse != 'gtmk443b') %>%
group_by(true_strategy, strategy_perturbation, strategy, direction, event_nr, scope) %>%
summarise(rate = n()) %>%
filter(scope != 'full') %>%
spread(key = 'scope', value = 'rate', fill = 0) %>%
mutate(change = future-past) %>%
spread(key = 'direction', value = 'change', fill = 0) %>%
mutate(change = if_else(true_strategy == 'right', L-R, R-L)) %>%
mutate(mouse = str_split_fixed(event_nr, "_", 4)[,1],
day = str_split_fixed(event_nr, "_", 4)[,2]) %>%
mutate(blocks = paste(mouse, day, true_strategy))
test <- prentice.test(testing[['change']], testing[['strategy_perturbation']], testing[['blocks']], alternative = 'greater')
test_per_mice <- testing %>%
group_by(mouse) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$p.value,
chi = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$statistic)
test_per_mice
test
?nls
testing
test_course <- testing %>%
filter(mouse == 'gtmk444f') %>%
mutate(day_nr = ymd(day) - ymd('2019-06-29')) %>%
filter(day <= 7 | day >= 14) %>%
mutate(group = (day <= 7)) %>%
group_by(group) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$p.value,
chi = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$statistic)
test_course
test_course <- testing %>%
filter(mouse == 'gtmk444f') %>%
mutate(day_nr = ymd(day) - ymd('2019-06-29')) %>%
filter(day_nr <= 7 | day_nr >= 14) %>%
mutate(group = (day <= 7)) %>%
group_by(group) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$p.value,
chi = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$statistic)
test_course
test_course <- testing %>%
filter(mouse == 'gtmk444f') %>%
mutate(day_nr = ymd(day) - ymd('2019-06-29')) %>%
filter(day_nr <= 7 | day_nr >= 14) %>%
mutate(group = (day_nr <= 7)) %>%
group_by(group) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$p.value,
chi = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$statistic)
test_course
citation("grid")
citation("png")
rm(list = ls())
knitr::kable(test_per_mouse)
df_raster <- feather::read_feather('data/pert_raster.feather')
raster <- ggplot(df_raster, aes(x = time, y = event_nr)) +
geom_rect(xmin = 0, xmax = 0.5, ymin = -Inf, ymax = Inf, inherit.aes = FALSE, show.legend = FALSE, mapping = aes(fill = strategy), data = df_raster %>% select(strategy, perturbation, true_strategy) %>% unique(), alpha = 0.1) +
geom_vline(xintercept = 0, colour = 'grey50') +
geom_tile(aes(height = 0.5, width = 0.02,
fill = fill_event)) +
facet_grid(perturbation ~ true_strategy, switch = 'y',
labeller = labeller(true_strategy = c(left = "'Leftwards!'", right = "'Rightwards!'"))) +
labs(x = NULL, y = NULL, fill = NULL) +
scale_x_continuous(labels = NULL) +
scale_y_discrete(breaks = NULL) +
scale_fill_manual(values = c(`Left Lick` = '#1b9e77',
`Right Lick` = '#d95f02',
Reward = 'blue',
`'Lick Left!'` = '#1b9e77',
`'Lick Right!'` = '#d95f02'),
breaks = c("Left Lick", "Right Lick", "Reward")) +
theme_minimal() +
theme(legend.title = element_blank(), plot.margin = unit(c(0, 0, 0, 0), "cm"))
knitr::kable(test_per_mouse, caption = "")
cd_pert <- feather::read_feather('general_hist.feather')
testing <- cd_pert %>%
filter(time > -1 & time < 1) %>%
filter(mouse != 'gtmk443f', mouse != 'gtmk443b') %>%
group_by(true_strategy, strategy_perturbation, strategy, direction, event_nr, scope) %>%
summarise(rate = n()) %>%
filter(scope != 'full') %>%
spread(key = 'scope', value = 'rate', fill = 0) %>%
mutate(change = future-past) %>%
spread(key = 'direction', value = 'change', fill = 0) %>%
mutate(change = if_else(true_strategy == 'right', L-R, R-L)) %>%
mutate(mouse = str_split_fixed(event_nr, "_", 4)[,1],
day = str_split_fixed(event_nr, "_", 4)[,2]) %>%
mutate(blocks = paste(mouse, day, true_strategy))
knitr::opts_chunk$set(
fig.align = "center",
out.width = "90%",
echo = FALSE,
message = FALSE,
warning = FALSE,
results = 'hide')
library(reticulate)
library(feather)
library(ggplot2)
library(patchwork)
library(muStat)
library(magrittr)
library(dplyr)
library(stringr)
library(lubridate)
library(tidyr)
library(png)
library(grid)
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown'
), 'packages.bib')
cd_pert <- feather::read_feather('general_hist.feather')
testing <- cd_pert %>%
filter(time > -1 & time < 1) %>%
filter(mouse != 'gtmk443f', mouse != 'gtmk443b') %>%
group_by(true_strategy, strategy_perturbation, strategy, direction, event_nr, scope) %>%
summarise(rate = n()) %>%
filter(scope != 'full') %>%
spread(key = 'scope', value = 'rate', fill = 0) %>%
mutate(change = future-past) %>%
spread(key = 'direction', value = 'change', fill = 0) %>%
mutate(change = if_else(true_strategy == 'right', L-R, R-L)) %>%
mutate(mouse = str_split_fixed(event_nr, "_", 4)[,1],
day = str_split_fixed(event_nr, "_", 4)[,2]) %>%
mutate(blocks = paste(mouse, day, true_strategy))
test <- prentice.test(testing[['change']], testing[['strategy_perturbation']], testing[['blocks']], alternative = 'greater')
test_per_mice <- testing %>%
group_by(mouse) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$p.value,
chi = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$statistic)
test_course <- testing %>%
filter(mouse == 'gtmk444f') %>%
mutate(day_nr = ymd(day) - ymd('2019-06-29')) %>%
filter(day_nr <= 7 | day_nr >= 14) %>%
mutate(group = (day_nr <= 7)) %>%
group_by(group) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$p.value,
chi = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$statistic)
df_ab <- feather::read_feather('data/df_ab.feather')
df_metric <- feather::read_feather('data/df_metric.feather')
df_metric <- hist_new %>%
filter(time > -1 & time < 1) %>%
mutate(scope = if_else(time<0, 'past','future'))
df_raster <- feather::read_feather('data/pert_raster.feather')
raster <- ggplot(df_raster, aes(x = time, y = event_nr)) +
geom_rect(xmin = 0, xmax = 0.5, ymin = -Inf, ymax = Inf, inherit.aes = FALSE, show.legend = FALSE, mapping = aes(fill = strategy), data = df_raster %>% select(strategy, perturbation, true_strategy) %>% unique(), alpha = 0.1) +
geom_vline(xintercept = 0, colour = 'grey50') +
geom_tile(aes(height = 0.5, width = 0.02,
fill = fill_event)) +
facet_grid(perturbation ~ true_strategy, switch = 'y',
labeller = labeller(true_strategy = c(left = "'Leftwards!'", right = "'Rightwards!'"))) +
labs(x = NULL, y = NULL, fill = NULL) +
scale_x_continuous(labels = NULL) +
scale_y_discrete(breaks = NULL) +
scale_fill_manual(values = c(`Left Lick` = '#1b9e77',
`Right Lick` = '#d95f02',
Reward = 'blue',
`'Lick Left!'` = '#1b9e77',
`'Lick Right!'` = '#d95f02'),
breaks = c("Left Lick", "Right Lick", "Reward")) +
theme_minimal() +
theme(legend.title = element_blank(), plot.margin = unit(c(0, 0, 0, 0), "cm"))
df_hist <- feather::read_feather('data/pert_df_hist.feather')
hist_new <- feather::read_feather('data/hist_new.feather') %>%
filter(true_strategy != 'success')
df_hist <- hist_new %>%
mutate(time = round(time*4)/4 + 1/8) %>%
group_by(label, direction, time, strategy_perturbation, true_strategy, event_nr) %>%
summarize(rate = n()*4)
expand <-
expand.grid(event_nr = unique(df_hist$event_nr),
direction = unique(df_hist$direction),
time = unique(df_hist$time)) %>%
as_tibble() %>%
left_join(
df_hist %>% ungroup() %>%  select(event_nr, strategy_perturbation, true_strategy) %>% unique(),
by = c('event_nr')
)
df_hist <-
df_hist %>%
ungroup() %>%
full_join(expand, by = c('event_nr', 'direction', 'time', 'strategy_perturbation', 'true_strategy')) %>%
mutate(rate = if_else(is.na(rate), 0, rate),
colour_event = if_else(direction == 'L', 'Left Lick', 'Right Lick'),
perturbation = if_else(strategy_perturbation == 'Yes', 'Perturbation', 'No perturbation'),
previous = if_else(true_strategy == 'left', "'Leftwards!'", "'Rightwards!'"))
ymin <- min(df_hist['rate'])
ymax <- max(df_hist['rate'])
hist <- df_hist %>%
group_by(colour_event, perturbation, time, previous) %>%
summarise(rate = mean(rate)) %>%
ggplot(aes(x = time, y = rate,
colour = colour_event,
linetype = perturbation)) +
geom_vline(xintercept = 0, colour = 'grey50') +
geom_line() +
facet_wrap('previous', labeller = function(x) '', nrow = 1) +
labs(x = 'Time (s)', y = 'Lickrate (Hz)') +
scale_colour_manual(values = c(`Left Lick` = '#1b9e77',
`Right Lick` = '#d95f02')) +
theme_minimal() +
theme(legend.title = element_blank(), plot.margin = unit(c(-0.3, 0, 0, 0), "cm")) +
annotate('label', x = 1, y = 3.75, label = "Stimulus Onset", hjust = 'left', size = 2.6) +
annotate('segment', x = 0, y = 4, xend = 0.97, yend = 3.75)
raster / hist + plot_layout(guides = 'keep', heights = c(3, 2)) + ggsave('figs/a-lickrates.png')
cd_pert <- feather::read_feather('general_hist.feather')
testing <- cd_pert %>%
filter(time > -1 & time < 1) %>%
filter(mouse != 'gtmk443f', mouse != 'gtmk443b') %>%
group_by(true_strategy, strategy_perturbation, strategy, direction, event_nr, scope) %>%
summarise(rate = n()) %>%
filter(scope != 'full') %>%
spread(key = 'scope', value = 'rate', fill = 0) %>%
mutate(change = future-past) %>%
spread(key = 'direction', value = 'change', fill = 0) %>%
mutate(change = if_else(true_strategy == 'right', L-R, R-L)) %>%
mutate(mouse = str_split_fixed(event_nr, "_", 4)[,1],
day = str_split_fixed(event_nr, "_", 4)[,2]) %>%
mutate(blocks = paste(mouse, day, true_strategy))
test <- prentice.test(testing[['change']], testing[['strategy_perturbation']], testing[['blocks']], alternative = 'greater')
test_per_mice <- testing %>%
group_by(mouse) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$p.value,
chi = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$statistic)
test_course <- testing %>%
filter(mouse == 'gtmk444f') %>%
mutate(day_nr = ymd(day) - ymd('2019-06-29')) %>%
filter(day_nr <= 7 | day_nr >= 14) %>%
mutate(group = (day_nr <= 7)) %>%
group_by(group) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$p.value,
chi = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$statistic)
df_ab <- feather::read_feather('data/df_ab.feather')
df_metric <- feather::read_feather('data/df_metric.feather')
df_metric <- hist_new %>%
filter(time > -1 & time < 1) %>%
mutate(scope = if_else(time<0, 'past','future'))
df_metric <- df_hist %>%
filter(time > -1 & time < 1) %>%
mutate(scope = if_else(time < 0, 'past','future')) %>%
mutate(long_direction = if_else(direction == 'L', 'left', 'right'),
correct = case_when(
true_strategy == long_direction &
strategy_perturbation == 'No' ~ 'Yes',
true_strategy == long_direction &
strategy_perturbation == 'Yes' ~ 'No',
true_strategy != long_direction &
strategy_perturbation == 'Yes' ~ 'Yes',
true_strategy != long_direction &
strategy_perturbation == 'No' ~ 'No'
)) %>%
group_by(scope, true_strategy, direction, correct, event_nr, strategy_perturbation) %>%
summarise(rate = mean(rate))
df_ab <-
df_metric %>%
group_by(scope, true_strategy, direction) %>%
summarise(pvalue = wilcox.test(x = rate[correct == 'Yes'],
y = rate[correct == 'No'], alternative = if_else(unique(scope) == 'past', 'two.sided', 'greater'))$p.value,
U = wilcox.test(x = rate[correct == 'Yes'],
y = rate[correct == 'No'], alternative = if_else(unique(scope) == 'past', 'two.sided', 'greater'))$statistic) %>%
mutate(previous = if_else(true_strategy == 'left', "'Leftwards!'", "'Rightwards!'"))
df_metric <-
df_metric %>%
mutate(
xmin = 0.62 + 0.5*(direction == 'R') + (scope == 'future') + 0.25 * (strategy_perturbation == 'Yes'),
group = paste(direction, scope, true_strategy, strategy_perturbation),
perturbation = if_else(strategy_perturbation == 'Yes', 'Perturbation', 'No perturbation'),
colour_event = if_else(direction == 'L', 'Left Lick', 'Right Lick'),
previous = if_else(true_strategy == 'left', "'Leftwards!'", "'Rightwards!'")
)
df_ab <-
df_ab %>%
filter(true_strategy != 'success') %>%
mutate(
annotation = case_when(
pvalue < 1e-4 ~ 'p<0.0001',
pvalue < 1e-3 ~ 'p<0.001',
pvalue < 1e-2 ~ 'p<0.01',
TRUE ~ paste0('p=', round(pvalue, 2))
),
xmin = 0.62 + 0.5*(direction == 'R') + (scope == 'future') + 0.125,
group = paste(direction, scope, previous)
)
p_values <-
ggplot(df_metric, aes(x = forcats::fct_rev(scope), y = rate, color = colour_event,
linetype = perturbation, shape = perturbation)) +
facet_wrap(~ previous, ncol = 2) +
stat_summary(geom = 'pointrange', fun.data = 'mean_cl_boot', position = position_dodge(width = 1)) +
geom_vline(xintercept = 1.5, color = 'grey50') +
scale_x_discrete(breaks = NULL) +
scale_shape_manual(values = c(`Perturbation` = 1, `No perturbation` = 19)) +
scale_colour_manual(values = c(`Left Lick` = '#1b9e77',
`Right Lick` = '#d95f02')) +
theme_minimal() +
labs(x = NULL, y = 'Average Lickrate (Hz)') +
ylim(0, NA) +
theme(legend.title = element_blank(),
legend.position = 'top') +
geom_segment(aes(x = xmin, xend = xmin, y = 4.3, yend = 4.5,
color = NULL, linetype = NULL, shape = NULL, group = group),
show.legend = FALSE) +
geom_segment(aes(x = xmin, xend = xmin + 0.25, y = 4.5, yend = 4.5),
inherit.aes = FALSE,
data = df_metric %>%
filter(strategy_perturbation == 'No')) +
geom_text(aes(x = xmin, y = 4.6, label = annotation), inherit.aes = FALSE,
data = df_ab,
vjust = 'bottom', hjust = 'middle') +
annotate('label', x = 1.6, y = 5.25, label = "Stimulus Onset", hjust = 'left', size = 2.6) +
annotate('segment', x = 1.5, y = 5, xend = 1.6, yend = 5.25)
p_values + ggsave('figs/significance.png')
test_per_mouse %>%
mutate(
Mouse = case_when(
mouse == 'gtmk443a' ~ 'M01',
mouse == 'gtmk443c' ~ 'M03',
mouse == 'gtmk443e' ~ 'M04',
mouse == 'gtmk443g' ~ 'M06',
mouse == 'gtmk443h' ~ 'M07',
mouse == 'gtmk444d' ~ 'M08',
mouse == 'gtmk444e' ~ 'M09',
mouse == 'gtmk444f' ~ 'M10',
mouse == 'gtmk444g' ~ 'M11'
)
) %>%
mutate(p_value = round(p_value, 2)) %>%
select(Mouse, `Test Statistic` = statistic, `p-value` = p_value)
testing <- cd_pert %>%
filter(time > -1 & time < 1) %>%
filter(mouse != 'gtmk443f', mouse != 'gtmk443b') %>%
group_by(true_strategy, strategy_perturbation, strategy, direction, event_nr, scope) %>%
summarise(rate = n()) %>%
filter(scope != 'full') %>%
spread(key = 'scope', value = 'rate', fill = 0) %>%
mutate(change = future-past) %>%
spread(key = 'direction', value = 'change', fill = 0) %>%
mutate(change = if_else(true_strategy == 'right', L-R, R-L)) %>%
mutate(mouse = str_split_fixed(event_nr, "_", 4)[,1],
day = str_split_fixed(event_nr, "_", 4)[,2]) %>%
mutate(blocks = paste(mouse, day, true_strategy))
test <- prentice.test(testing[['change']], testing[['strategy_perturbation']], testing[['blocks']], alternative = 'greater')
test_per_mice <- testing %>%
group_by(mouse) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$p.value,
chi = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$statistic)
test_course <- testing %>%
filter(mouse == 'gtmk444f') %>%
mutate(day_nr = ymd(day) - ymd('2019-06-29')) %>%
filter(day_nr <= 7 | day_nr >= 14) %>%
mutate(group = (day_nr <= 7)) %>%
group_by(group) %>%
summarise(p_value = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$p.value,
chi = prentice.test(change, strategy_perturbation, blocks, alternative = 'greater')$statistic)
test_per_mouse %>%
mutate(
Mouse = case_when(
mouse == 'gtmk443a' ~ 'M01',
mouse == 'gtmk443c' ~ 'M03',
mouse == 'gtmk443e' ~ 'M04',
mouse == 'gtmk443g' ~ 'M06',
mouse == 'gtmk443h' ~ 'M07',
mouse == 'gtmk444d' ~ 'M08',
mouse == 'gtmk444e' ~ 'M09',
mouse == 'gtmk444f' ~ 'M10',
mouse == 'gtmk444g' ~ 'M11'
)
) %>%
mutate(p_value = round(p_value, 2)) %>%
select(Mouse, `Test Statistic` = statistic, `p-value` = p_value)
test_per_mice %>%
mutate(
Mouse = case_when(
mouse == 'gtmk443a' ~ 'M01',
mouse == 'gtmk443c' ~ 'M03',
mouse == 'gtmk443e' ~ 'M04',
mouse == 'gtmk443g' ~ 'M06',
mouse == 'gtmk443h' ~ 'M07',
mouse == 'gtmk444d' ~ 'M08',
mouse == 'gtmk444e' ~ 'M09',
mouse == 'gtmk444f' ~ 'M10',
mouse == 'gtmk444g' ~ 'M11'
)
) %>%
mutate(p_value = round(p_value, 2)) %>%
select(Mouse, `Test Statistic` = statistic, `p-value` = p_value) %>%
knitr::kable(caption = "", booktabs = TRUE)
test_per_mice
test_per_mice %>%
mutate(
Mouse = case_when(
mouse == 'gtmk443a' ~ 'M01',
mouse == 'gtmk443c' ~ 'M03',
mouse == 'gtmk443e' ~ 'M04',
mouse == 'gtmk443g' ~ 'M06',
mouse == 'gtmk443h' ~ 'M07',
mouse == 'gtmk444d' ~ 'M08',
mouse == 'gtmk444e' ~ 'M09',
mouse == 'gtmk444f' ~ 'M10',
mouse == 'gtmk444g' ~ 'M11'
)
) %>%
mutate(p_value = round(p_value, 2)) %>%
select(Mouse, `Test Statistic` = chi, `p-value` = p_value) %>%
knitr::kable(caption = "", booktabs = TRUE)
?round
test_per_mice %>%
mutate(
Mouse = case_when(
mouse == 'gtmk443a' ~ 'M01',
mouse == 'gtmk443c' ~ 'M03',
mouse == 'gtmk443e' ~ 'M04',
mouse == 'gtmk443g' ~ 'M06',
mouse == 'gtmk443h' ~ 'M07',
mouse == 'gtmk444d' ~ 'M08',
mouse == 'gtmk444e' ~ 'M09',
mouse == 'gtmk444f' ~ 'M10',
mouse == 'gtmk444g' ~ 'M11'
)
) %>%
mutate(p_value = signif(p_value, 2)) %>%
select(Mouse, `Test Statistic` = chi, `p-value` = p_value) %>%
knitr::kable(caption = "", booktabs = TRUE)
test_course
